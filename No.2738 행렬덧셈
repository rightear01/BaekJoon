#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <stdlib.h>
// N * M (N, M <= 100) 크기의 배열 A, B
// 입력의 첫째줄에는 N, M 입력
// 둘째줄 부터는 A의 1행 원소들 입력을 필두로 해당 배열의 원소들을 저장한다.
// A가 끝나면 B 행렬의 원소들을 차례로 저장받는다.
// 출력은 A와 B의 각 행을 더해서 출력한다.(전부)

int** createMatrix(int height, int width);
void initMatrix(int** array, int height, int width);
void showResult(int** arrayA, int** arrayB, int height, int width);

int main()
{
	int N, M; // N은 행, M은 열
	int** arrayA; int** arrayB;
	scanf("%d %d", &N, &M);
	arrayA = createMatrix(N, M); arrayB = createMatrix(N, M);
	initMatrix(arrayA, N, M); initMatrix(arrayB, N, M);
	showResult(arrayA, arrayB, N, M);

	return 0;
}

int** createMatrix(int height, int width) // 2차원 행렬 동적할당
{
	int** array = (int**)malloc(sizeof(int*) * height);
	for (int i = 0; i < height; i++) { array[i] = (int*)malloc(sizeof(int) * width); }

	return array;
}

void initMatrix(int** array, int height, int width) // 2차원 행렬에 원소를 저장
{
	for (int i = 0; i < height; i++)
		for (int j = 0; j < width; j++)
			scanf("%d", &array[i][j]);
}

void showResult(int** arrayA, int** arrayB, int height, int width) // 행렬 덧셈 후 출력
{
	for (int i = 0; i < height; i++){
		for (int j = 0; j < width; j++)
		{
			printf("%d ", arrayA[i][j] + arrayB[i][j]);
		}
		printf("\n");
	}
}
