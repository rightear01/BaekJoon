#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <stdlib.h>

/*
접근법 - 주어진 조건을 천천히 따라간다. 각 변의 길이를 편하게 비교하기 위해 qsort()를 사용하여 정렬한다.

Equilateral :  세 변의 길이가 모두 같은 경우
Isosceles : 두 변의 길이만 같은 경우
Scalene : 세 변의 길이가 모두 다른 경우
세 변의 길이가 삼각형의 조건을 만족하지 못하는 경우에는 "Invalid" 를 출력한다.
가장 긴 변의 길이보다 나머지 두 변의 길이의 합이 길지 않으면 삼각형의 조건을 만족하지 못한다.
각 줄에는 1,000을 넘지 않는 양의 정수 3개가 입력된다. 마지막 줄은 0 0 0이며 이 줄은 계산하지 않는다.
*/

int compare(const void* first, const void* second) { return *(int*)first - *(int*)second; }

int main() {
	while (1) {
		int edgeArray[4];
		scanf("%d %d %d", &edgeArray[0], &edgeArray[1], &edgeArray[2]);
		if (edgeArray[0] == 0 && edgeArray[1] == 0 && edgeArray[2] == 0) { break; }
		else {
			qsort(edgeArray, 3, sizeof(int), compare);
			if (edgeArray[2] >= edgeArray[0] + edgeArray[1]) { printf("Invalid\n"); continue; }
			else if(edgeArray[0] == edgeArray[1] && edgeArray[1] == edgeArray[2]){ printf("Equilateral\n"); continue; }
			else if(edgeArray[0] == edgeArray[1] || edgeArray[1] == edgeArray[2] || edgeArray[0] == edgeArray[2]  ) { printf("Isosceles\n"); continue; }
			else { printf("Scalene\n"); continue; }
		}
	}
}
